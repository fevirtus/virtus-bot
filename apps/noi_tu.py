import discord
import asyncio
from core.bot import bot, CHANNEL_NOI_TU_ID
from typing import Set
from datetime import datetime
from apps.score import incr

# Lazy load repository ƒë·ªÉ tr√°nh l·ªói database connection
noi_tu_repo = None

def get_noi_tu_repo():
    """Lazy load repository"""
    global noi_tu_repo
    if noi_tu_repo is None:
        from repositories.noi_tu import NoiTuRepository
        noi_tu_repo = NoiTuRepository()
    return noi_tu_repo

# Game state
class NoiTuGame:
    def __init__(self):
        self.is_active = False
        self.current_word = ""
        self.used_words: Set[str] = set()
        self.last_player_id = None
        self.last_player_name = None  # Th√™m t√™n ng∆∞·ªùi ch∆°i cu·ªëi
        self.last_message_time = None
        self.timeout_task = None
        self.channel = None
        self.timer_message = None  # Tin nh·∫Øn hi·ªÉn th·ªã th·ªùi gian
        self.timer_task = None     # Task c·∫≠p nh·∫≠t th·ªùi gian
        self.start_time = None     # Th·ªùi gian b·∫Øt ƒë·∫ßu game
        self.lock = asyncio.Lock()

# Kh·ªüi t·∫°o game state
game = NoiTuGame()

def is_admin(ctx):
    """Ki·ªÉm tra xem user c√≥ ph·∫£i l√† admin kh√¥ng"""
    return ctx.author.guild_permissions.administrator

def is_correct_channel(ctx):
    """Ki·ªÉm tra xem command c√≥ ƒë∆∞·ª£c th·ª±c hi·ªán trong ƒë√∫ng channel kh√¥ng"""
    return ctx.channel.id == CHANNEL_NOI_TU_ID

def get_first_word(word: str) -> str:
    return word.strip().split()[0] if word else ''

def get_last_word(word: str) -> str:
    return word.strip().split()[-1] if word else ''

def is_valid(prev, next: str) -> bool:
    return get_last_word(prev) == get_first_word(next)

def format_time_remaining(seconds: int) -> str:
    """Format th·ªùi gian c√≤n l·∫°i"""
    if seconds <= 0:
        return "‚è∞ H·∫øt th·ªùi gian!"
    return f"‚è∞ C√≤n l·∫°i: {seconds} gi√¢y"

async def update_timer_message():
    """C·∫≠p nh·∫≠t tin nh·∫Øn th·ªùi gian m·ªói 1 gi√¢y"""
    start_time = game.last_message_time
    if not start_time:
        return
        
    for remaining in range(30, -1, -1):  # ƒê·∫øm ng∆∞·ª£c t·ª´ 30 ƒë·∫øn 0
        if not game.is_active or not game.timer_message:
            break
            
        try:
            # C·∫≠p nh·∫≠t embed
            embed = game.timer_message.embeds[0]
            embed.title = format_time_remaining(remaining)
            
            # Thay ƒë·ªïi m√†u s·∫Øc theo th·ªùi gian
            if remaining <= 5:
                embed.color = discord.Color.red()
            elif remaining <= 10:
                embed.color = discord.Color.orange()
            elif remaining <= 20:
                embed.color = discord.Color.yellow()
            else:
                embed.color = discord.Color.blue()
            
            await game.timer_message.edit(embed=embed)
            
            # D·ª´ng n·∫øu h·∫øt th·ªùi gian
            if remaining <= 0:
                break
                
            await asyncio.sleep(1)  # ƒê·ª£i ƒë√∫ng 1 gi√¢y
            
        except Exception as e:
            print(f"Error updating timer: {e}")
            break

@bot.command(name='start')
async def start_game(ctx):
    """B·∫Øt ƒë·∫ßu tr√≤ ch∆°i n·ªëi t·ª´"""
    if not is_correct_channel(ctx):
        return
    
    if game.is_active:
        await ctx.send("‚ùå Tr√≤ ch∆°i ƒë√£ ƒëang di·ªÖn ra!")
        return
    
    # L·∫•y repository
    repo = get_noi_tu_repo()
    
    # L·∫•y t·ª´ ng·∫´u nhi√™n ƒë·ªÉ b·∫Øt ƒë·∫ßu
    start_word = await repo.get_random_word()
    if not start_word:
        await ctx.send("‚ùå Kh√¥ng c√≥ t·ª´ n√†o trong c∆° s·ªü d·ªØ li·ªáu!")
        return
    
    # Kh·ªüi t·∫°o game
    game.is_active = True
    game.current_word = start_word
    game.used_words = {start_word}
    game.last_player_id = None
    game.last_player_name = None
    game.channel = ctx.channel
    game.last_message_time = datetime.now()
    game.start_time = datetime.now()
    
    # T·∫°o timeout task
    game.timeout_task = asyncio.create_task(game_timeout())
    
    embed = discord.Embed(
        title="üéÆ Tr√≤ ch∆°i N·ªëi T·ª´ ƒë√£ b·∫Øt ƒë·∫ßu!",
        description=f"T·ª´ ƒë·∫ßu ti√™n: **{start_word}**\n\n"
                   f"üìù **Lu·∫≠t ch∆°i:**\n"
                   f"‚Ä¢ M·ªói t·ª´ g·ªìm 2 t·ª´ gh√©p ti·∫øng Vi·ªát (VD: '√¢m cao', 'cao ƒë·ªô')\n"
                   f"‚Ä¢ T·ª´ ƒë·∫ßu c·ªßa t·ª´ m·ªõi ph·∫£i tr√πng v·ªõi t·ª´ cu·ªëi c·ªßa t·ª´ tr∆∞·ªõc\n"
                   f"‚Ä¢ Kh√¥ng ƒë∆∞·ª£c l·∫∑p l·∫°i t·ª´ ƒë√£ d√πng\n"
                   f"‚Ä¢ Th·ªùi gian tr·∫£ l·ªùi t·ªëi ƒëa: 30 gi√¢y\n\n"
                   f"‚è∞ Th·ªùi gian b·∫Øt ƒë·∫ßu: {datetime.now().strftime('%H:%M:%S')}",
        color=discord.Color.green()
    )
    
    await ctx.send(embed=embed)

@bot.command(name='end')
async def end_game(ctx):
    """K·∫øt th√∫c tr√≤ ch∆°i n·ªëi t·ª´"""
    if not is_correct_channel(ctx):
        return
    
    if not game.is_active:
        await ctx.send("‚ùå Kh√¥ng c√≥ tr√≤ ch∆°i n√†o ƒëang di·ªÖn ra!")
        return
    
    # D·ª´ng c√°c task
    if game.timeout_task:
        game.timeout_task.cancel()
    if game.timer_task:
        game.timer_task.cancel()
    
    # T√≠nh th·ªùi gian ch∆°i
    game_duration = ""
    if game.start_time:
        duration = datetime.now() - game.start_time
        minutes = int(duration.total_seconds() // 60)
        seconds = int(duration.total_seconds() % 60)
        game_duration = f"{minutes} ph√∫t {seconds} gi√¢y"
    
    # T·∫°o th√¥ng b√°o k·∫øt th√∫c
    embed = discord.Embed(
        title="üèÅ Tr√≤ ch∆°i N·ªëi T·ª´ ƒë√£ k·∫øt th√∫c!",
        description=f"üìä **Th·ªëng k√™:**\n"
                   f"‚Ä¢ S·ªë t·ª´ ƒë√£ s·ª≠ d·ª•ng: {len(game.used_words)}\n"
                   f"‚Ä¢ T·ª´ cu·ªëi c√πng: {game.current_word if game.current_word else 'N/A'}\n"
                   f"‚Ä¢ Th·ªùi gian ch∆°i: {game_duration}",
        color=discord.Color.red()
    )
    
    # Th√™m th√¥ng tin ng∆∞·ªùi chi·∫øn th·∫Øng
    if game.last_player_name:
        embed.add_field(
            name="üëë Ng∆∞·ªùi chi·∫øn th·∫Øng",
            value=f"**{game.last_player_name}** - T·ª´ cu·ªëi: **{game.current_word}**",
            inline=False
        )
    
    await ctx.send(embed=embed)
    
    # Reset game state
    game.is_active = False
    game.current_word = ""
    game.used_words.clear()
    game.last_player_id = None
    game.last_player_name = None
    game.channel = None
    game.last_message_time = None
    game.timeout_task = None
    game.timer_message = None
    game.timer_task = None
    game.start_time = None

@bot.command(name='add')
async def add_word(ctx, *, word: str):
    """Th√™m t·ª´ m·ªõi v√†o c∆° s·ªü d·ªØ li·ªáu (ch·ªâ admin)"""
    if not is_correct_channel(ctx):
        return
    
    if not is_admin(ctx):
        await ctx.send("‚ùå Ch·ªâ admin m·ªõi c√≥ th·ªÉ th√™m t·ª´!")
        return
    
    # Ki·ªÉm tra t·ª´ c√≥ h·ª£p l·ªá kh√¥ng
    if not await get_noi_tu_repo().is_valid_word(word):
        await ctx.send("‚ùå T·ª´ ph·∫£i c√≥ ƒë√∫ng 2 t·ª´ gh√©p!")
        return
    
    # Ki·ªÉm tra t·ª´ ƒë√£ t·ªìn t·∫°i ch∆∞a
    if await get_noi_tu_repo().is_exist(word):
        await ctx.send(f"‚ùå T·ª´ '{word}' ƒë√£ t·ªìn t·∫°i trong c∆° s·ªü d·ªØ li·ªáu!")
        return
    
    # Th√™m t·ª´
    success = await get_noi_tu_repo().add(word)
    if success:
        embed = discord.Embed(
            title="‚úÖ Th√™m t·ª´ th√†nh c√¥ng!",
            description=f"T·ª´: **{word}**",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
    else:
        await ctx.send("‚ùå C√≥ l·ªói x·∫£y ra khi th√™m t·ª´!")

@bot.command(name='remove')
async def remove_word(ctx, *, word: str):
    """X√≥a t·ª´ kh·ªèi c∆° s·ªü d·ªØ li·ªáu (ch·ªâ admin)"""
    if not is_correct_channel(ctx):
        return
    
    if not is_admin(ctx):
        await ctx.send("‚ùå Ch·ªâ admin m·ªõi c√≥ th·ªÉ x√≥a t·ª´!")
        return
    
    # Ki·ªÉm tra t·ª´ c√≥ t·ªìn t·∫°i kh√¥ng
    if not await get_noi_tu_repo().is_exist(word):
        await ctx.send(f"‚ùå T·ª´ '{word}' kh√¥ng t·ªìn t·∫°i trong c∆° s·ªü d·ªØ li·ªáu!")
        return
    
    # X√≥a t·ª´
    success = await get_noi_tu_repo().remove(word)
    if success:
        embed = discord.Embed(
            title="‚úÖ X√≥a t·ª´ th√†nh c√¥ng!",
            description=f"ƒê√£ x√≥a t·ª´: **{word}**",
            color=discord.Color.green()
        )
        await ctx.send(embed=embed)
    else:
        await ctx.send("‚ùå C√≥ l·ªói x·∫£y ra khi x√≥a t·ª´!")

async def game_timeout():
    """X·ª≠ l√Ω timeout c·ªßa game"""
    try:
        # ƒê·ª£i ƒë√∫ng 30 gi√¢y
        for i in range(30):
            if not game.is_active:
                return
            await asyncio.sleep(1)
        
        # Ki·ªÉm tra l·∫°i tr∆∞·ªõc khi timeout
        if game.is_active and game.last_message_time:
            time_diff = datetime.now() - game.last_message_time
            if time_diff.total_seconds() >= 30:
                # Game timeout
                embed = discord.Embed(
                    title="‚è∞ H·∫øt th·ªùi gian!",
                    description=f"Kh√¥ng ai tr·∫£ l·ªùi trong 30 gi√¢y.\n"
                               f"T·ª´ cu·ªëi c√πng: **{game.current_word}**\n"
                               f"Tr√≤ ch∆°i k·∫øt th√∫c!",
                    color=discord.Color.orange()
                )
                
                # Th√™m th√¥ng tin ng∆∞·ªùi chi·∫øn th·∫Øng
                if game.last_player_name:
                    embed.add_field(
                        name="üëë Ng∆∞·ªùi chi·∫øn th·∫Øng",
                        value=f"**{game.last_player_name}** - T·ª´ cu·ªëi: **{game.current_word}**",
                        inline=False
                    )
                    if len(game.used_words) > 2:
                        await incr(game.last_player_id, game.last_player_name, 1)
                
                if game.channel:
                    await game.channel.send(embed=embed)
                
                # Reset game
                game.is_active = False
                game.current_word = ""
                game.used_words.clear()
                game.last_player_id = None
                game.last_player_name = None
                game.channel = None
                game.last_message_time = None
                game.timeout_task = None
                game.timer_message = None
                game.timer_task = None
                game.start_time = None
                
    except asyncio.CancelledError:
        pass

@bot.listen('on_message')
async def handle_game_message(message):
    """X·ª≠ l√Ω tin nh·∫Øn trong game"""
    # B·ªè qua tin nh·∫Øn t·ª´ bot
    if message.author.bot:
        return
    
    # Ch·ªâ x·ª≠ l√Ω trong channel ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh
    if message.channel.id != CHANNEL_NOI_TU_ID:
        return
    
    # N·∫øu game kh√¥ng active, b·ªè qua
    if not game.is_active:
        return
    
    # Ki·ªÉm tra xem tin nh·∫Øn c√≥ ph·∫£i l√† t·ª´ kh√¥ng
    word = message.content.strip().lower()
    if len(word.split()) != 2:
        return
    
    # Ki·ªÉm tra t·ª´ c√≥ h·ª£p l·ªá kh√¥ng
    if not await get_noi_tu_repo().is_valid_word(word):
        return
    
    # Ki·ªÉm tra ng∆∞·ªùi v·ª´a tr·∫£ l·ªùi c√≥ tr·∫£ l·ªùi ti·∫øp kh√¥ng
    if game.last_player_id == message.author.id:
        # ignore
        # await message.add_reaction('‚ùå')
        # await message.channel.send(f"‚ùå **{message.author.display_name}**, h√£y ƒë·ªÉ ng∆∞·ªùi kh√°c tr·∫£ l·ªùi!")
        return
    
    
    # Ki·ªÉm tra t·ª´ ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng ch∆∞a
    if word in game.used_words:
        await message.add_reaction('‚ùå')
        await message.channel.send(f"‚ùå T·ª´ '{word}' ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng!")
        return
    
    # Ki·ªÉm tra quy t·∫Øc n·ªëi t·ª´ gh√©p
    if game.current_word:
        if not is_valid(game.current_word, word):
            return

    # Ki·ªÉm tra t·ª´ c√≥ t·ªìn t·∫°i trong DB kh√¥ng
    if not await get_noi_tu_repo().is_exist(word):
        await message.add_reaction('‚ùå')
        return

    async with game.lock:
        if not is_valid(game.current_word, word):
            return
        # T·ª´ h·ª£p l·ªá
        await message.add_reaction('‚úÖ')
        
        # C·∫≠p nh·∫≠t game state
        game.current_word = word
        game.used_words.add(word)
        game.last_player_id = message.author.id
        game.last_player_name = message.author.display_name  # L∆∞u t√™n ng∆∞·ªùi ch∆°i
        game.last_message_time = datetime.now()
        
        # Reset timeout
        if game.timeout_task:
            game.timeout_task.cancel()
        game.timeout_task = asyncio.create_task(game_timeout())
        
        # D·ª´ng timer task c≈© n·∫øu c√≥
        if game.timer_task:
            game.timer_task.cancel()
        
        # Th√¥ng b√°o t·ª´ ti·∫øp theo
        next_hint = get_last_word(word).upper()
        embed = discord.Embed(
            title="‚è∞ C√≤n l·∫°i: 30 gi√¢y",
            color=discord.Color.blue()
        )
        
        # G·ª≠i tin nh·∫Øn m·ªõi v√† l∆∞u reference
        game.timer_message = await message.channel.send(embed=embed)
        
        # B·∫Øt ƒë·∫ßu task c·∫≠p nh·∫≠t th·ªùi gian
        game.timer_task = asyncio.create_task(update_timer_message())

